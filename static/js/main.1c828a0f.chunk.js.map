{"version":3,"sources":["components/Tabs/Tabs.tsx","tabData.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","isActive","find","tab","id","className","map","href","onClick","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMASaA,EAAkB,SAAC,GAIzB,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAWH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEpE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACEE,UAAWF,EAAIC,KAAOH,EAASG,GAAK,YAAc,GAClD,UAAQ,MAFV,SAIE,mBACEG,KAAI,WAAMJ,EAAIC,IACd,UAAQ,UACRI,QAAS,WACHL,EAAIC,KAAOL,GACbC,EAAcG,IALpB,SASGA,EAAIM,iBAMf,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAASS,cCzCLZ,EAAO,CAClB,CAAEM,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,gBCK7BC,EAAU,WACrB,MAA0CC,mBAAS,SAAnD,mBAAOb,EAAP,KAAsBc,EAAtB,KACMZ,EACFH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAQvD,OACE,sBAAKO,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAJ,EAASQ,SAEZ,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAeA,EACfC,cAhBY,SAACG,GACbA,EAAIC,KAAOL,GACbc,EAAiBV,EAAIC,WCZ3BU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1c828a0f.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { Tab } from '../../types';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\nexport const Tabs: FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const isActive = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={tab.id === isActive.id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== selectedTabId) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {isActive.content}\n      </div>\n    </div>\n  );\n};\n","export const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n","import { useState, FC } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { tabs } from './tabData';\nimport { Tab } from './types';\n\nexport const App: FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n  const isActive\n    = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const selectTab = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      setSelectedTabId(tab.id);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {isActive.title}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={selectTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}